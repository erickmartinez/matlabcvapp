function Export_CV_1Pushed_ext(app)
% Export_CV_1Pushed_ext
% Exports all the CV plots
% Parameters
% ----------
% app : obj
%   A handle to the app designer gui object
%
% Generate arbitrary data to test:
% for i=1:3 app.MD(i).PinState = pinStates(i,:); app.MD(i).ExpData.Setup.StressBiasValue = stressBias; app.MD(i).ExpData.Setup.TempH = stressTemp; app.MD(i).Plots.CV=cvPlots; app.MD(i).ExpData.Setup.biastime_sec=600; for j=1:10 app.MD(i).ExpData.Pin(j).V=V; app.MD(i).ExpData.Pin(j).C = C; end; end

    % Clear all figures
    clf; shg;

    % Iterate over all the measurement units
    for k=1:3
        % Get the pin states for the current unit
        pinStates        = app.MD(k).PinState;
        % Get the value of the stress bias
        stressBias      = app.MD(k).ExpData.Setup.StressBiasValue;
        % Get the value of the stress temperature
        stressTemp      = app.MD(k).ExpData.Setup.TempH;
        % Get the stress time in seconds
        dt = app.MD(k).ExpData.Setup.biastime_sec;

        % Get the total number of plots
        totalPlots = length(app.MD(k).Plots.CV);
        rows = 2; % The number of rows for subplots
        cols = 2; % The number of cols for subplots

        
        figureCV2        = figure();%('visible','off'); 
        haxCV2           = axes;
        set(gca, 'FontSize',14)

        % Iterate over all the pin states
        for q = 1:totalPlots % Gets the number of CV plots
            % If the pin is conneted plot the results
            if pinStates(q)
                % Get the bias voltage and capacitance values for the selected
                % measurement unit
                V = app.MD(k).ExpData.Pin(q).V;
                C = (app.MD(k).ExpData.Pin(q).C).*1e12;
                
                % Get the number of lines to be plotted
                nLines = size(V,2);
                % Get a colormap for the dataset
                c = hot(nLines+1);
                colormap(c);
                % Get the time at each CV plot
                stressTime = (1:nLines).*(dt/3600); 
                % Plot the results in two different figures to avoid having 8
                % subplots in the same figure.
                if q <= 4
                    % Select the subplot
                    subplot(rows,cols,mod(q,4),figureCV1);
                    % plot each line with the color defined previously
                    hold(haxCV1,'on');
                    for i=1:nLines
                        plot(haxCV1,V(:,i),C(:,i),'Color',c(i,:),'LineWidth',2);
                    end
                    hold(haxCV1,'off');
                    % Get a colorbar
                    hc = colorbar(haxCV1);
                    cb = linspace(min(stressTime),max(stressTime),4);
                    hc.Label.String = 'Time (hr)';
                    if max(stressTime) > 3600
                        set(hc, 'YTick',cb, 'YTickLabel',cb);
                    else
                        TL=arrayfun(@(x) sprintf('%.1f',x),cb,'un',0);
                        set(hc, 'TickLabels',TL);
                    end
                    % Add labels
                    title( haxCV1,"Pin "+q+" (Bias = "+stressBias+"V, T = "+stressTemp+" °C)");
                    xlabel(haxCV1,'Voltage (V)');
                    ylabel(haxCV1,'Capacitance (pF)');
                else
                    % Select the subplot
                    subplot(rows,cols,mod(q,4),figureCV1);
                    % plot each line with the color defined previously
                    hold(haxCV2,'on');
                    for i=1:nLines
                        plot(haxCV2,V(:,i),C(:,i),'Color',c(i,:),'LineWidth',2);
                    end
                    hold(haxCV2,'off');
                    % Get a colorbar
                    hc = colorbar(haxCV2);
                    cb = linspace(min(stressTime),max(stressTime),4);
                    hc.Label.String = 'Time (hr)';
                    if max(stressTime) > 3600
                        set(hc, 'YTick',cb, 'YTickLabel',cb);
                    else
                        TL=arrayfun(@(x) sprintf('%.1f',x),cb,'un',0);
                        set(hc, 'TickLabels',TL);
                    end
                    % Add labels
                    title( haxCV2,"Pin "+q+" (Bias = "+stressBias+"V, T = "+stressTemp+" °C)");
                    xlabel(haxCV2,'Voltage (V)');
                    ylabel(haxCV2,'Capacitance (pF)');
                end
                
%                 ylabel(hc, 'Time (hr)');
            end % pinStates(q) ends 
        end % p = 1:length(PinState) ends
        tstamp = TimeStamp;
        filetag1 = "Figure_MU"+k+"_CV1" + tstamp;
        filetag2 = "Figure_MU"+k+"_CV2" + tstamp;
        % TODO : get the save directory
        try
            savefig(haxCV1,strcat(filetag1,'.fig'));
            savefig(haxCV2,strcat(filetag2,'.fig'));
        catch e
            display(e.message);
        end % try catch ends
    end % mu=1:3 ends 
end